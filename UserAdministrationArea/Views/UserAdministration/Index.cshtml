@using MvcContrib;
@model UserAdministration.Models.IndexViewModel

@{
    ViewBag.Title = "User Administration";
}

@section HeadSection {
	<link href='@Url.Resource("Content.MvcMembership.css")' rel="stylesheet" type="text/css" />
}

<h2 class="mvcMembership">User Administration</h2>
	
<h3 class="mvcMembership">Users (@Html.ActionLink("Create New User", "CreateUser"))</h3>

<div class="mvcMembership-allUsers">
    @if(Model.Users.Count > 0) { 
	    <ul class="mvcMembership mvcMembership-users">
	        @foreach(var user in Model.Users) { 
		        <li>
			        <span class="mvcMembership-username">@Html.ActionLink(user.UserName, "Details", new { id = user.ProviderUserKey })</span>
			        <span class="mvcMembership-email"><a href="mailto:@user.Email">@user.Email</a></span>
			        @if(user.IsOnline) { 
				        <span class="mvcMembership-isOnline">Online</span>
			        } 
                    else { 
				        <span class="mvcMembership-isOffline">Offline for
					        @{
						        var offlineSince = (DateTime.UtcNow - user.LastActivityDate);
                                var output = string.Empty;
                                if (offlineSince.TotalSeconds <= 60) { <text>1 minute.</text> }
                                else if (offlineSince.TotalMinutes < 60) { <text>@Math.Floor(offlineSince.TotalMinutes) minutes.</text> }
                                else if (offlineSince.TotalMinutes < 120) { <text>1 hour.</text> }
                                else if (offlineSince.TotalHours < 24) { <text>@Math.Floor(offlineSince.TotalHours) hours.</text> }
                                else if (offlineSince.TotalHours < 48) {<text>1 day.</text> }
                                else { <text>@Math.Floor(offlineSince.TotalDays) days.</text> }
					        }
				        </span>
			        } 
			        @if(!string.IsNullOrEmpty(user.Comment)){ 
				        <span class="mvcMembership-comment">@user.Comment</span>
			        } 
		        </li>
	        } 
	    </ul>
	    <ul class="mvcMembership mvcMembership-paging">
	        @if (Model.Users.IsFirstPage) { 
		        <li>First</li>
		        <li>Previous</li>
	        } 
            else { 
		        <li>@Html.ActionLink("First", "Index")</li>
		        <li>@Html.ActionLink("Previous", "Index", new { index = Model.Users.PageIndex - 1 })</li>
	        } 

		    <li>Page @Model.Users.PageNumber of @Model.Users.PageCount</li>

	        @if (Model.Users.IsLastPage) { 
		        <li>Next</li>
		        <li>Last</li>
	        } 
            else { 
		        <li>@Html.ActionLink("Next", "Index", new { index = Model.Users.PageIndex + 1 })</li>
		        <li>@Html.ActionLink("Last", "Index", new { index = Model.Users.PageCount - 1 })</li>
	        } 
	    </ul>
    } else { 
	    <p>No users have registered.</p>
    } 
</div>

<h3 class="mvcMembership">Roles</h3>

<div class="mvcMembership-allRoles">
    @if(Model.Roles.Count() > 0 ) { 
	    <ul class="mvcMembership">
	    @foreach(var role in Model.Roles) { 
		    <li>
			    @Html.ActionLink(role, "Role", new { id = role })
			    @using(Html.BeginForm("DeleteRole", "UserAdministration", new { id = role })) { 
			        <input type="submit" value="Delete" />
	            } 
		    </li>
	    } 
	    </ul>
    } 
    else { 
	    <p>No roles have been created.</p>
    }

    @using(Html.BeginForm("CreateRole", "UserAdministration")) { 
	    <fieldset>
		    <label for="id">Role:</label>
		    @Html.TextBox("id")
		    <input type="submit" value="Create Role" />
	    </fieldset>
    }
</div>
